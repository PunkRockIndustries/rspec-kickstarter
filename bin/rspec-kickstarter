#!/usr/bin/env ruby
#
# rspec-kickstarter [dir/*.rb]
#

require 'optparse'
require 'rspec_kickstarter/generator'

force_write = false
dry_run = false
rails_mode = false
spec_dir = './spec'
delta_path = nil
full_path = nil

opt = OptionParser.new
opt.on('-f', 'Create if absent or append to the existing spec') { |_| force_write = true }
opt.on('--force', '') { |_| force_write = true }
opt.on('-n', 'Dry run mode (shows generated code to console)') { |_| dry_run = true }
opt.on('--dry-run', '') { |_| dry_run = true }
opt.on('-r', 'Run in Rails mode') { |_| rails_mode = true }
opt.on('--rails', '') { |_| rails_mode = true }
opt.on('-o VAL', 'Output directory (default: ./spec)') { |dir| spec_dir = dir }
opt.on('--output-dir VAL', '') { |dir| spec_dir = dir }
opt.on('--delta-template VAL', 'Delta template filepath') { |path| delta_path = path }
opt.on('--full-template VAL', 'Full template filepath') { |path| full_path = path }

args = opt.parse(ARGV)
dir_or_file = args.first
if dir_or_file.nil?
  puts "Usage: rspec-kickstarter [dir/*.rb]"
  exit 1
end
unless dir_or_file.match(/.rb$/)
  dir_or_file = dir_or_file.gsub(/\/$/, '') + "/**/*.rb"
end

delta_template = nil
if ! delta_path.nil? && File.exist?(delta_path)
  delta_template = File.read(delta_path)
end
full_template = nil
if ! full_path.nil? && File.exist?(full_path)
  full_template = File.read(full_path)
end

generator = RSpecKickstarter::Generator.new(spec_dir, delta_template, full_template)

Dir.glob(dir_or_file).each do |file_path|
  generator.write_spec(file_path, force_write, dry_run, rails_mode)
end

